@model ScoringSystem.Models.ChangePasswordModel
@{ Layout = "~/Views/Shared/_lightLayout.cshtml"; }

<div class="accountHeader">
    <h2>更改密码</h2>
  
    <p style="color:red">@ViewBag.ErrorMessage</p>
</div>
@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.DevExpress().TextBoxFor(m => m.OldPassword, tb => {
        tb.Properties.Caption = "旧密码";
        tb.Properties.Password = true;
        tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
        tb.ShowModelErrors = true;
        tb.Properties.ValidationSettings.Display = Display.Dynamic;
        tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
        tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
    }).GetHtml()
    
    @Html.DevExpress().TextBoxFor(m => m.NewPassword, tb => {
        tb.Properties.Caption = "新密码";
        tb.Properties.Password = true;
        tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
        tb.ShowModelErrors = true;
        tb.Properties.ValidationSettings.Display = Display.Dynamic;
        tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
        tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
    }).GetHtml()
                
    @Html.DevExpress().TextBoxFor(m => m.ConfirmPassword, tb => {
        tb.Properties.Caption = "确认密码";
        tb.Properties.Password = true;
        tb.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
        tb.ShowModelErrors = true;
        tb.Properties.ValidationSettings.Display = Display.Dynamic;
        tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
        tb.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
    }).GetHtml()
    <br />
    @Html.DevExpress().Button(b => {
        b.Name = "Button";
        b.Text = "更改密码";
        b.UseSubmitBehavior = true;
    }).GetHtml()
}